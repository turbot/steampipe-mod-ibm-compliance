locals {
  cis_v100_7_common_tags = merge(local.cis_v100_common_tags, {
    cis_section_id = "7"
  })
}

locals {
  cis_v100_7_1_common_tags = merge(local.cis_v100_7_common_tags, {
    cis_section_id = "7.1"
  })
  cis_v100_7_2_common_tags = merge(local.cis_v100_7_common_tags, {
    cis_section_id = "7.2"
  })
}

locals {
  cis_v100_7_1_1_common_tags = merge(local.cis_v100_7_1_common_tags, {
    cis_section_id = "7.1.1"
  })
}

benchmark "cis_v100_7" {
  title         = "7 Containers"
  documentation = file("./cis_v100/docs/cis_v100_7.md")
  tags          = local.cis_v100_7_common_tags
  children = [
    benchmark.cis_v100_7_1,
    benchmark.cis_v100_7_2,
  ]
}

benchmark "cis_v100_7_1" {
  title       = "7.1 IBM Kubernetes Service"
  documentation = file("./cis_v100/docs/cis_v100_7_1.md")
  tags        = local.cis_v100_7_1_common_tags
  children = [
    benchmark.cis_v100_7_1_1,
    control.cis_v100_7_1_2,
    control.cis_v100_7_1_3,
    control.cis_v100_7_1_4,
    control.cis_v100_7_1_5,
    control.cis_v100_7_1_6,
    control.cis_v100_7_1_7
  ]
}

benchmark "cis_v100_7_1_1" {
  title       = "7.1.1 Use a Key Management Service (KMS) provider to encrypt data in Kubernetes  secrets"
  documentation = file("./cis_v100/docs/cis_v100_7_1_1.md")
  tags        = local.cis_v100_7_1_1_common_tags
  children = [
    control.cis_v100_7_1_1_1,
    control.cis_v100_7_1_1_2
  ]
}

control "cis_v100_7_1_1_1" {
  title         = "7.1.1.1 Ensure Kubernetes secrets data is encrypted with bring your own key  (BYOK)"
  description   = "IBM Key Protect for IBM Cloud helps you provision encrypted keys for apps across IBM Cloud services. Use the IBM Key Protect for IBM Cloud key management service (KMS) to encrypt data in Kubernetes secrets and prevent unauthorized users from accessing sensitive app information (for example, credentials and keys). Keys are generated by FIPS 140-2 Level 3 certified hardware security modules (HSMs) that are located in secure IBM Cloud data centers."
  documentation = file("./cis_v100/docs/cis_v100_7_1_1_1.md")
  sql           = query.manual_control.sql

  tags = merge(local.cis_v100_7_1_1_common_tags, {
    cis_item_id = "7.1.1.1"
    cis_level   = "1"
    cis_type    = "manual"
    service     = "containers"
  })
}

control "cis_v100_7_1_1_2" {
  title         = "7.1.1.2 Ensure Kubernetes secrets data is encrypted with keep your own key (KYOK)"
  description   = "Hyper Protect Crypto Services (Hyper Protect Crypto Services for short) is a dedicated key management service and hardware security module (HSM) based on IBM Cloud. This service allows you to take the ownership of the cloud HSM to fully manage your encryption keys and to perform cryptographic operations. Use Hyper Protect Crypt Services, a dedicated key management service (KMS) and hardware security module (HSM), to encrypt data in Kubernetes secrets and prevent unauthorized users from accessing sensitive app information, for example, credentials and keys."
  documentation = file("./cis_v100/docs/cis_v100_7_1_1_2.md")
  sql           = query.manual_control.sql

  tags = merge(local.cis_v100_7_1_1_common_tags, {
    cis_item_id = "7.1.1.2"
    cis_level   = "1"
    cis_type    = "manual"
    service     = "containers"
  })
}

control "cis_v100_7_1_2" {
  title         = "7.1.2 Ensure TLS 1.2 for all inbound traffic at IBM Cloud Kubernetes Service Ingress"
  description   = "Ensure that all insecure (HTTP) client requests to applications and services hosted on IBM Cloud Kubernetes Service are redirected to secure TLS connections (HTTPS), and ensure that only TLS versions 1.2+ are supported."
  documentation = file("./cis_v100/docs/cis_v100_7_1_2.md")
  sql           = query.no_sdk.sql

  tags = merge(local.cis_v100_7_1_common_tags, {
    cis_item_id = "7.1.2"
    cis_level   = "1"
    cis_type    = "automated"
    service     = "containers"
  })
}

control "cis_v100_7_1_3" {
  title         = "7.1.3 Ensure IBM Cloud Kubernetes Service worker nodes are updated to the latest image to ensure patching of vulnerabilities"
  description   = "Update the worker nodes in a cluster to the latest patch version so that security fixes are applied to those worker nodes."
  documentation = file("./cis_v100/docs/cis_v100_7_1_3.md")
  sql           = query.no_sdk.sql

  tags = merge(local.cis_v100_7_1_common_tags, {
    cis_item_id = "7.1.3"
    cis_level   = "1"
    cis_type    = "automated"
    service     = "containers"
  })
}

control "cis_v100_7_1_4" {
  title         = "7.1.4 Ensure that clusters are accessible only by using private endpoints "
  description   = "Disable the public service endpoint so that communication to the master from both the worker nodes and cluster users is established over the private network through the private service endpoint."
  documentation = file("./cis_v100/docs/cis_v100_7_1_4.md")
  sql           = query.no_sdk.sql

  tags = merge(local.cis_v100_7_1_common_tags, {
    cis_item_id = "7.1.4"
    cis_level   = "1"
    cis_type    = "automated"
    service     = "containers"
  })
}

control "cis_v100_7_1_5" {
  title         = "7.1.5 Ensure IBM Cloud Kubernetes Service cluster has image pull secrets enabled"
  description   = "Image pull secrets are credentials that authorize your cluster to pull images from a private image registry. IBM Cloud Kubernetes Service integrates with IBM Cloud Container Registry and provides pull secrets for IBM Cloud Container Registry in the default Kubernetes namespace."
  documentation = file("./cis_v100/docs/cis_v100_7_1_5.md")
  sql           = query.no_sdk.sql

  tags = merge(local.cis_v100_7_1_common_tags, {
    cis_item_id = "7.1.5"
    cis_level   = "1"
    cis_type    = "automated"
    service     = "containers"
  })
}

control "cis_v100_7_1_6" {
  title         = "7.1.6 Ensure IBM Cloud Kubernetes Service clusters have the monitoring service enabled"
  description   = "With IBM Cloud Monitoring with Sysdig, you can collect cluster and pod metrics, such as the CPU and memory usage of your worker nodes, incoming and outgoing HTTP traffic for your pods, and data about several infrastructure components. In addition, the agent can collect custom application metrics by using either a Prometheus-compatible scraper or a StatsD facade."
  documentation = file("./cis_v100/docs/cis_v100_7_1_6.md")
  sql           = query.no_sdk.sql

  tags = merge(local.cis_v100_7_1_common_tags, {
    cis_item_id = "7.1.6"
    cis_level   = "1"
    cis_type    = "automated"
    service     = "containers"
  })
}

control "cis_v100_7_1_7" {
  title         = "7.1.7 Ensure IBM Cloud Kubernetes Service clusters have the logging service enabled"
  description   = "Create a logging configuration to forward cluster and app logs to IBM Log Analysis with LogDNA. IBM Log Analysis with LogDNA offers administrators, DevOps teams, and developers advanced features to filter, search, and tail log data, define alerts, and design custom views to monitor application and system logs."
  documentation = file("./cis_v100/docs/cis_v100_7_1_7.md")
  sql           = query.no_sdk.sql

  tags = merge(local.cis_v100_7_1_common_tags, {
    cis_item_id = "7.1.7"
    cis_level   = "1"
    cis_type    = "automated"
    service     = "containers"
  })
}

benchmark "cis_v100_7_2" {
  title       = "7.2 Container Registry"
  description = "IBM Cloud Container Registry provides a multi-tenant, highly available, scalable, and encrypted private image registry that is hosted and managed by IBMÂ®. You can use IBM Cloud Container Registry by setting up your own image namespace and pushing container images to your namespace."
  tags        = local.cis_v100_7_2_common_tags
  children = [
    control.cis_v100_7_2_1
  ]
}

control "cis_v100_7_2_1" {
  title         = "7.2.1 Block deployments of vulnerable images to Kubernetes clusters"
  documentation = file("./cis_v100/docs/cis_v100_7_2_1.md")
  sql           = query.no_sdk.sql

  tags = merge(local.cis_v100_7_2_common_tags, {
    cis_item_id = "7.2.1"
    cis_level   = "1"
    cis_type    = "automated"
    service     = "containers"
  })
}